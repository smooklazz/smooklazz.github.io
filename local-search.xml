<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>清楚！理解“UV、IP和PV＂的定义！</title>
    <link href="/2022/04/21/UV/"/>
    <url>/2022/04/21/UV/</url>
    
    <content type="html"><![CDATA[<h3 id="UV-Unique-visitor"><a href="#UV-Unique-visitor" class="headerlink" title="UV(Unique visitor)"></a>UV(Unique visitor)</h3><p>是指通过互联网访问、浏览这个网页的自然人。访问您网站的一台电脑客户端为一个访客。00:00-24:00内相同的客户端只被计算一次。<br>一天内同个访客多次访问仅计算一次。即（UV+1）</p><h3 id="IP（Internet-Protocol）"><a href="#IP（Internet-Protocol）" class="headerlink" title="IP（Internet Protocol）"></a>IP（Internet Protocol）</h3><p>独立IP是指访问过某站点的IP总数，以用户的IP地址作为统计依据。00:00-24:00内相同IP地址之被计算一次。</p><h3 id="UV与IP区别："><a href="#UV与IP区别：" class="headerlink" title="UV与IP区别："></a>UV与IP区别：</h3><p><strong>UV–以客户端作为计算标准</strong><br><strong>IP–以IP地址作为计算标准</strong><br>如：你和你的家人用各自的账号在同一台电脑上登录新浪微博，则IP数+1，UV数+2。由于使用的是同一台电脑，所以IP不变，但使用的不同账号，所以UV+2</p><h3 id="PV（Page-View）"><a href="#PV（Page-View）" class="headerlink" title="PV（Page View）"></a>PV（Page View）</h3><p>即页面浏览量或点击量，用户每1次对网站中的每个网页访问均被记录1个PV。用户对同一页面的多次访问，访问量累计，用以衡量网站用户访问的网页数量。</p><h3 id="UV与PV区别："><a href="#UV与PV区别：" class="headerlink" title="UV与PV区别："></a>UV与PV区别：</h3><p><strong>PV–以浏览次数为标准</strong><br>简单来说：<br>PV，就是你自己刷新这个页面，刷新10次，PV就+10<br>UV，就是你自己刷新这个页面，刷新10次，UV只+1</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Mysql8.0及以上 only_full_group_by报错解决方案</title>
    <link href="/2022/04/21/hello-world/"/>
    <url>/2022/04/21/hello-world/</url>
    
    <content type="html"><![CDATA[<h1 id="Mysql8-0及以上-only-full-group-by报错解决方案"><a href="#Mysql8-0及以上-only-full-group-by报错解决方案" class="headerlink" title="Mysql8.0及以上 only_full_group_by报错解决方案"></a>Mysql8.0及以上 only_full_group_by报错解决方案</h1><h2 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h2><p>在mysql8.0及以上的版本中，数据库sql_mode默认设置了only_full_group_by</p><h2 id="方法一（适合mysql长期不重启、电脑不关机用户）"><a href="#方法一（适合mysql长期不重启、电脑不关机用户）" class="headerlink" title="方法一（适合mysql长期不重启、电脑不关机用户）"></a>方法一（适合mysql长期不重启、电脑不关机用户）</h2><h3 id="终端"><a href="#终端" class="headerlink" title="终端"></a>终端</h3><figure class="highlight awk"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs awk">进入mysql<br>终端输入 ：    <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/MySQL/</span>bin/mysql -u root -p<br>然后输入密码进入mysql<br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql">输入：<span class="hljs-keyword">SELECT</span> @<span class="hljs-variable">@sql</span>_mode;  <br>可以看到如下显示结果：<br>mysql<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> @<span class="hljs-variable">@sql</span>_mode;<br><span class="hljs-operator">+</span><span class="hljs-comment">-----------------------------------------------------------------------------------------------------------------------+</span><br><span class="hljs-operator">|</span> @<span class="hljs-variable">@sql</span>_mode                                                                                                            <span class="hljs-operator">|</span><br><span class="hljs-operator">+</span><span class="hljs-comment">-----------------------------------------------------------------------------------------------------------------------+</span><br><span class="hljs-operator">|</span> ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION <span class="hljs-operator">|</span><br><span class="hljs-operator">+</span><span class="hljs-comment">-----------------------------------------------------------------------------------------------------------------------+</span><br><span class="hljs-number">1</span> <span class="hljs-type">row</span> <span class="hljs-keyword">in</span> <span class="hljs-keyword">set</span> (<span class="hljs-number">0.00</span> sec)<br></code></pre></td></tr></table></figure><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">通过以下脚本关闭 ：<br><span class="hljs-keyword">SET</span> <span class="hljs-keyword">SESSION</span> sql_mode=(<span class="hljs-keyword">SELECT</span> REPLACE(@@sql_mode,<span class="hljs-string">&#x27;ONLY_FULL_GROUP_BY,&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>));<br></code></pre></td></tr></table></figure><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><br>再次查询 @@sql_mode 返回中应该已经没有该模式了。<br><br><span class="hljs-section">mysql&gt; SELECT @@sql_mode;</span><br><span class="hljs-section">+----------------------------------------------------------------------------------------------------+</span><br><span class="hljs-section">| @@sql_mode                                                                                         |</span><br><span class="hljs-section">+----------------------------------------------------------------------------------------------------+</span><br><span class="hljs-section">| STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION |</span><br><span class="hljs-section">+----------------------------------------------------------------------------------------------------+</span><br>1 row in set (0.00 sec)<br></code></pre></td></tr></table></figure><h3 id="navicat"><a href="#navicat" class="headerlink" title="navicat"></a>navicat</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql">选择对应数据库，同上执行下面两句，可以查看和配置sql_mode<br><span class="hljs-keyword">SELECT</span> @<span class="hljs-variable">@sql</span>_mode;  <br><span class="hljs-keyword">SET</span> SESSION sql_mode<span class="hljs-operator">=</span>(<span class="hljs-keyword">SELECT</span> REPLACE(@<span class="hljs-variable">@sql</span>_mode,<span class="hljs-string">&#x27;ONLY_FULL_GROUP_BY,&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>));<br></code></pre></td></tr></table></figure><h3 id="弊端"><a href="#弊端" class="headerlink" title="弊端"></a>弊端</h3><p>mysql重启后失效，需要重新配置。</p><h2 id="方法二：通过修改my-cnf配置文件"><a href="#方法二：通过修改my-cnf配置文件" class="headerlink" title="方法二：通过修改my.cnf配置文件"></a>方法二：通过修改my.cnf配置文件</h2><p>首先MAC下默认没有my.cnf配置文件，需要自己创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">首先进入etc 文件夹<br><span class="hljs-built_in">cd</span> /etc<br></code></pre></td></tr></table></figure><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vhdl">然后通过 sudo vi my.cnf（一般需要管理权限执行，不然会报：<span class="hljs-string">&quot;my.cnf&quot;</span> E212: Can<span class="hljs-symbol">&#x27;t</span> <span class="hljs-keyword">open</span> <span class="hljs-keyword">file</span> <span class="hljs-keyword">for</span> writing）<br>创建并编写文件，然后按 i，进行编写<br>并将下述内容复制到文件中<br></code></pre></td></tr></table></figure><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-comment"># Example MySQL config file for small systems.  </span><br><span class="hljs-comment">#  </span><br><span class="hljs-comment"># This is for a system with little memory (&lt;= 64M) where MySQL is only used  </span><br><span class="hljs-comment"># from time to time and it&#x27;s important that the mysqld daemon  </span><br><span class="hljs-comment"># doesn&#x27;t use much resources.  </span><br><span class="hljs-comment">#  </span><br><span class="hljs-comment"># MySQL programs look for option files in a set of  </span><br><span class="hljs-comment"># locations which depend on the deployment platform.  </span><br><span class="hljs-comment"># You can copy this option file to one of those  </span><br><span class="hljs-comment"># locations. For information about these locations, see:  </span><br><span class="hljs-comment"># http://dev.mysql.com/doc/mysql/en/option-files.html  </span><br><span class="hljs-comment">#  </span><br><span class="hljs-comment"># In this file, you can use all long options that a program supports.  </span><br><span class="hljs-comment"># If you want to know which options a program supports, run the program  </span><br><span class="hljs-comment"># with the &quot;--help&quot; option.  </span><br><br><span class="hljs-comment"># The following options will be passed to all MySQL clients  </span><br>[client]  <br>default-character-set=utf8  <br><span class="hljs-comment">#password   = your_password  </span><br>port        = 3306 <br>socket      = /tmp/mysql.sock  <br><br><span class="hljs-comment"># Here follows entries for some specific programs  </span><br><br><span class="hljs-comment"># The MySQL server   </span><br>[mysqld]  <br>default-storage-engine=INNODB  <br>character-set-server=utf8  <br>collation-server=utf8_general_ci  <br>port        = 3306 <br>socket      = /tmp/mysql.sock  <br>skip-external-locking  <br>key_buffer_size = 16K  <br>max_allowed_packet = 1M  <br>table_open_cache = 4 <br>sort_buffer_size = 64K  <br>read_buffer_size = 256K  <br>read_rnd_buffer_size = 256K  <br>net_buffer_length = 2K  <br>thread_stack = 128K  <br><br><span class="hljs-comment"># Don&#x27;t listen on a TCP/IP port at all. This can be a security enhancement,  </span><br><span class="hljs-comment"># if all processes that need to connect to mysqld run on the same host.  </span><br><span class="hljs-comment"># All interaction with mysqld must be made via Unix sockets or named pipes.  </span><br><span class="hljs-comment"># Note that using this option without enabling named pipes on Windows  </span><br><span class="hljs-comment"># (using the &quot;enable-named-pipe&quot; option) will render mysqld useless!  </span><br><span class="hljs-comment">#   </span><br><span class="hljs-comment">#skip-networking  </span><br>server-id   = 1 <br><br><span class="hljs-comment"># Uncomment the following if you want to log updates  </span><br><span class="hljs-comment">#log-bin=mysql-bin  </span><br><br><span class="hljs-comment"># binary logging format - mixed recommended  </span><br><span class="hljs-comment">#binlog_format=mixed  </span><br><br><span class="hljs-comment"># Causes updates to non-transactional engines using statement format to be  </span><br><span class="hljs-comment"># written directly to binary log. Before using this option make sure that  </span><br><span class="hljs-comment"># there are no dependencies between transactional and non-transactional  </span><br><span class="hljs-comment"># tables such as in the statement INSERT INTO t_myisam SELECT * FROM  </span><br><span class="hljs-comment"># t_innodb; otherwise, slaves may diverge from the master.  </span><br><span class="hljs-comment">#binlog_direct_non_transactional_updates=TRUE  </span><br><br><span class="hljs-comment"># Uncomment the following if you are using InnoDB tables  </span><br><span class="hljs-comment">#innodb_data_home_dir = /usr/local/mysql/data  </span><br><span class="hljs-comment">#innodb_data_file_path = ibdata1:10M:autoextend  </span><br><span class="hljs-comment">#innodb_log_group_home_dir = /usr/local/mysql/data  </span><br><span class="hljs-comment"># You can set .._buffer_pool_size up to 50 - 80 %  </span><br><span class="hljs-comment"># of RAM but beware of setting memory usage too high  </span><br><span class="hljs-comment">#innodb_buffer_pool_size = 16M  </span><br><span class="hljs-comment">#innodb_additional_mem_pool_size = 2M  </span><br><span class="hljs-comment"># Set .._log_file_size to 25 % of buffer pool size  </span><br><span class="hljs-comment">#innodb_log_file_size = 5M  </span><br><span class="hljs-comment">#innodb_log_buffer_size = 8M  </span><br><span class="hljs-comment">#innodb_flush_log_at_trx_commit = 1 </span><br><span class="hljs-comment">#innodb_lock_wait_timeout = 50 </span><br><br>[mysqldump]  <br>quick  <br>max_allowed_packet = 16M  <br><br>[mysql]  <br>no-auto-rehash  <br><span class="hljs-comment"># Remove the next comment character if you are not familiar with SQL  </span><br><span class="hljs-comment">#safe-updates  </span><br><br>[myisamchk]  <br>key_buffer_size = 8M  <br>sort_buffer_size = 8M  <br><br>[mysqlhotcopy]  <br>interactive-timeout <br><br>[mysqld]<br>sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION<br></code></pre></td></tr></table></figure><p>使用:wq!命令保存退出文件<br>修改下my.cnf的文件权限</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo chmod <span class="hljs-number">664</span> <span class="hljs-regexp">/etc/my</span>.cnf <br></code></pre></td></tr></table></figure><p>最后重启Mysql,配置文件就可以生效了</p><h2 id="方法三：通过改代码实现"><a href="#方法三：通过改代码实现" class="headerlink" title="方法三：通过改代码实现"></a>方法三：通过改代码实现</h2><p>可以通过 ANY_VALUE() 来改造查询语句以避免报错。</p><p>使用 ANY_VALUE() 包裹的值不会被检查，跳过该错误。所以这样是可以的：<br>如下所示</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">SELECT</span> gender, <br>-       last_name（改前）<br>+       ANY_VALUE(last_name) （改后）<br><span class="hljs-keyword">FROM</span>   employees <br><span class="hljs-keyword">GROUP</span>  <span class="hljs-keyword">BY</span> gender <br></code></pre></td></tr></table></figure><p>参考：<br><a href="https://www.cnblogs.com/Wayou/p/mysql_group_by_issue.html">https://www.cnblogs.com/Wayou/p/mysql_group_by_issue.html</a><br><a href="https://blog.csdn.net/weixin_38106322/article/details/105345643">https://blog.csdn.net/weixin_38106322/article/details/105345643</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
